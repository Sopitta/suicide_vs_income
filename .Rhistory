k_bad = sum(loo1$diagnostics$pareto_k>=0.9)
k_vals2[i] = c(k_good, k_ok, k_bad); i=i+1
}
file_name = file_names[3]
i=1; loo_vals3 <-list(1,2,3,4); k_vals3<- list(c(1,2,3), c(1,2,3), c(1,2,3))
v_list3 = list(c(1,1,  10,0,   100,10,100),
c(4,4,   50,2,   50,20,10),
c(0.5,0.5,   5,2,   50,10,50),
c(2,2,   10,0,   100,5,100)
)
for(v_val in v_list3)
{sm_suicide <- rstan::stan_model(file = file_name)
stan_data <- list(y1 = ukdata$suicides100k, x1=ukdata$wagepercol, N1 = length(ukdata$wagepercol), y2 = usdata$suicides100k, x2=usdata$wagepercol, N2 = length(usdata$wagepercol), y3 = countrydata$suicides100k, x3=countrydata$wagepercol, N3 = length(countrydata$wagepercol), v=v_val)
model_hier <- rstan::sampling(sm_suicide, data = stan_data, seed = 2,control=list(adapt_delta=0.95))
draws_hier <- as.data.frame(model_hier)
log_lik  <- data.matrix(draws_hier[(length(draws_hier)-123):(length(draws_hier)-1)]) #Works for all models
loo1 <- loo(log_lik)
loo_vals3[i]=loo1$estimates[1]
k_good = sum(loo1$diagnostics$pareto_k<0.7); k_ok = sum(loo1$diagnostics$pareto_k>=0.7 & loo1$diagnostics$pareto_k<0.9);
k_bad = sum(loo1$diagnostics$pareto_k>=0.9)
k_vals3[i] = c(k_good, k_ok, k_bad); i=i+1
}
file_name = file_names[4]
i=1; loo_vals4 <-list(1,2,3,4); k_vals4 <-list(c(1,2,3), c(1,2,3), c(1,2,3))
v_list4 = list(c(10,10,   100,10,100,   1,1),
c(100,0,   50,20,50,   2,2),
c(50,2,   20,20,20,   1,2),
c(10,5,   50,10,100,   4,4))
for(v_val in v_list4)
{sm_suicide <- rstan::stan_model(file = file_name)
stan_data <- list(y = c(ukdata$suicides100k, usdata$suicides100k, countrydata$suicides100k), x=c(ukdata$wagepercol, usdata$wagepercol, countrydata$wagepercol), N = 124, v=v_val)
model_hier <- rstan::sampling(sm_suicide, data = stan_data, seed = 2,control=list(adapt_delta=0.95))
draws_hier <- as.data.frame(model_hier)
log_lik  <- data.matrix(draws_hier[(length(draws_hier)-123):(length(draws_hier)-1)]) #Works for all models
loo1 <- loo(log_lik)
loo_vals4[i]=loo1$estimates[1]
k_good = sum(loo1$diagnostics$pareto_k<0.7); k_ok = sum(loo1$diagnostics$pareto_k>=0.7 & loo1$diagnostics$pareto_k<0.9);
k_bad = sum(loo1$diagnostics$pareto_k>=0.9)
k_vals4[i] = c(k_good, k_ok, k_bad); i=i+1
}
k_vals1
k_vals2
loo_vals1
loo_vals2
loo_vals3
loo_vals4
k_vals4 <-list(c(1,2,3), c(1,2,3), c(1,2,3))
k_vals4
k_vals4[1] <- c(3,3,3)
k_vals4
k_vals4[[1]] <- c(3,3,3)
k_vals4
file_name = file_names[4]
library(rstan)
library(shinystan)
library(loo)
#setwd("C:/Users/SopittaT/Desktop/Fall2020/BDA/Project/Data")
#setwd("~/Documents/work/bda/project")
setwd("/m/home/home7/75/ranjitm1/unix/Downloads/bda/suicide_v_income")
ukdata =read.csv('UKdata.csv');
usdata =read.csv('USdata.csv');
countrydata =read.csv('countrydata.csv')
file_names = c("Model_1.stan", "Model_2.stan", "Model_3.stan", "Model_4.stan"  )
file_name = file_names[1]
i=1; loo_vals1 <-list(1,2,3,4); k_vals1<- list(c(1,2,3), c(1,2,3), c(1,2,3))
v_list1 = list(c(10, 100,   1,100,   1, 1,   1, 1,   1, 1), c(0, 10,   0,10,   1, 1,   1, 1,   1, 1), c(10, 100,   1,100,   4, 4,   4, 4,   4, 1), c(0, 10,   0,10,   4, 4,   4, 4,   4, 4))
for(v_val in v_list)
{sm_suicide <- rstan::stan_model(file = file_name)
stan_data <- list(y1 = ukdata$suicides100k, x1=ukdata$wagepercol, N1 = length(ukdata$wagepercol), y2 = usdata$suicides100k, x2=usdata$wagepercol, N2 = length(usdata$wagepercol), y3 = countrydata$suicides100k, x3=countrydata$wagepercol, N3 = length(countrydata$wagepercol), v=v_val)
model_hier <- rstan::sampling(sm_suicide, data = stan_data, seed = 2,control=list(adapt_delta=0.95))
draws_hier <- as.data.frame(model_hier)
log_lik  <- data.matrix(draws_hier[(length(draws_hier)-123):(length(draws_hier)-1)]) #Works for all models
loo1 <- loo(log_lik)
loo_vals1[i]=loo1$estimates[1]
k_good = sum(loo1$diagnostics$pareto_k<0.7); k_ok = sum(loo1$diagnostics$pareto_k>=0.7 & loo1$diagnostics$pareto_k<0.9);
k_bad = sum(loo1$diagnostics$pareto_k>=0.9)
k_vals1[[i]] = c(k_good, k_ok, k_bad); i=i+1
}
file_name = file_names[2]
i=1; loo_vals2 <-list(1,2,3,4); k_vals2<- list(c(1,2,3), c(1,2,3), c(1,2,3))
v_list2 = list(c(1,1,   2,    0,10,   100,10,100,   10,0,   100,10,100),
c(4,4,   0.5,    0,2,   20,10,20,   2,0,   20,10,20),
c(2,2,   0.25,    2,5,   100,10,100,   5,2,   100,30,100),
c(1,1,   0.75,    2,20,   20,10,20,   20,20,   20,10,20)
)
for(v_val in v_list2)
{sm_suicide <- rstan::stan_model(file = file_name)
stan_data <- list(y1 = ukdata$suicides100k, x1=ukdata$wagepercol, N1 = length(ukdata$wagepercol), y2 = usdata$suicides100k, x2=usdata$wagepercol, N2 = length(usdata$wagepercol), y3 = countrydata$suicides100k, x3=countrydata$wagepercol, N3 = length(countrydata$wagepercol), v=v_val)
model_hier <- rstan::sampling(sm_suicide, data = stan_data, seed = 2,control=list(adapt_delta=0.95))
draws_hier <- as.data.frame(model_hier)
log_lik  <- data.matrix(draws_hier[(length(draws_hier)-123):(length(draws_hier)-1)]) #Works for all models
loo1 <- loo(log_lik)
loo_vals2[i]=loo1$estimates[1]
k_good = sum(loo1$diagnostics$pareto_k<0.7); k_ok = sum(loo1$diagnostics$pareto_k>=0.7 & loo1$diagnostics$pareto_k<0.9);
k_bad = sum(loo1$diagnostics$pareto_k>=0.9)
k_vals2[[i]] = c(k_good, k_ok, k_bad); i=i+1
}
file_name = file_names[3]
i=1; loo_vals3 <-list(1,2,3,4); k_vals3<- list(c(1,2,3), c(1,2,3), c(1,2,3))
v_list3 = list(c(1,1,  10,0,   100,10,100),
c(4,4,   50,2,   50,20,10),
c(0.5,0.5,   5,2,   50,10,50),
c(2,2,   10,0,   100,5,100)
)
for(v_val in v_list3)
{sm_suicide <- rstan::stan_model(file = file_name)
stan_data <- list(y1 = ukdata$suicides100k, x1=ukdata$wagepercol, N1 = length(ukdata$wagepercol), y2 = usdata$suicides100k, x2=usdata$wagepercol, N2 = length(usdata$wagepercol), y3 = countrydata$suicides100k, x3=countrydata$wagepercol, N3 = length(countrydata$wagepercol), v=v_val)
model_hier <- rstan::sampling(sm_suicide, data = stan_data, seed = 2,control=list(adapt_delta=0.95))
draws_hier <- as.data.frame(model_hier)
log_lik  <- data.matrix(draws_hier[(length(draws_hier)-123):(length(draws_hier)-1)]) #Works for all models
loo1 <- loo(log_lik)
loo_vals3[i]=loo1$estimates[1]
k_good = sum(loo1$diagnostics$pareto_k<0.7); k_ok = sum(loo1$diagnostics$pareto_k>=0.7 & loo1$diagnostics$pareto_k<0.9);
k_bad = sum(loo1$diagnostics$pareto_k>=0.9)
k_vals3[[i]] = c(k_good, k_ok, k_bad); i=i+1
}
file_name = file_names[4]
i=1; loo_vals4 <-list(1,2,3,4); k_vals4 <-list(c(1,2,3), c(1,2,3), c(1,2,3))
v_list4 = list(c(10,10,   100,10,100,   1,1),
c(100,0,   50,20,50,   2,2),
c(50,2,   20,20,20,   1,2),
c(10,5,   50,10,100,   4,4))
for(v_val in v_list4)
{sm_suicide <- rstan::stan_model(file = file_name)
stan_data <- list(y = c(ukdata$suicides100k, usdata$suicides100k, countrydata$suicides100k), x=c(ukdata$wagepercol, usdata$wagepercol, countrydata$wagepercol), N = 124, v=v_val)
model_hier <- rstan::sampling(sm_suicide, data = stan_data, seed = 2,control=list(adapt_delta=0.95))
draws_hier <- as.data.frame(model_hier)
log_lik  <- data.matrix(draws_hier[(length(draws_hier)-123):(length(draws_hier)-1)]) #Works for all models
loo1 <- loo(log_lik)
loo_vals4[i]=loo1$estimates[1]
k_good = sum(loo1$diagnostics$pareto_k<0.7); k_ok = sum(loo1$diagnostics$pareto_k>=0.7 & loo1$diagnostics$pareto_k<0.9);
k_bad = sum(loo1$diagnostics$pareto_k>=0.9)
k_vals4[[i]] = c(k_good, k_ok, k_bad); i=i+1
}
k_vals1
loo1
loo_vals1
k_vals2
loo_vals2
k_vals3
loo_vals3
library(rstan)
library(shinystan)
library(loo)
#setwd("C:/Users/SopittaT/Desktop/Fall2020/BDA/Project/Data")
#setwd("~/Documents/work/bda/project")
setwd("/m/home/home7/75/ranjitm1/unix/Downloads/bda/suicide_v_income")
ukdata =read.csv('UKdata.csv');
usdata =read.csv('USdata.csv');
countrydata =read.csv('countrydata.csv')
file_names = c("Model_1.stan", "Model_2.stan", "Model_3.stan", "Model_4.stan"  )
file_name = file_names[1]
i=1; loo_vals1 <-list(1,2,3,4); k_vals1<- list(c(1,2,3), c(1,2,3), c(1,2,3))
v_list1 = list(c(10, 100,   1,100,   1, 1,   1, 1,   1, 1), c(0, 10,   0,10,   1, 1,   1, 1,   1, 1), c(10, 100,   1,100,   4, 4,   4, 4,   4, 1), c(0, 10,   0,10,   4, 4,   4, 4,   4, 4))
for(v_val in v_list)
{sm_suicide <- rstan::stan_model(file = file_name)
stan_data <- list(y1 = ukdata$suicides100k, x1=ukdata$wagepercol, N1 = length(ukdata$wagepercol), y2 = usdata$suicides100k, x2=usdata$wagepercol, N2 = length(usdata$wagepercol), y3 = countrydata$suicides100k, x3=countrydata$wagepercol, N3 = length(countrydata$wagepercol), v=v_val)
model_hier <- rstan::sampling(sm_suicide, data = stan_data, seed = 2,control=list(adapt_delta=0.95))
draws_hier <- as.data.frame(model_hier)
log_lik  <- data.matrix(draws_hier[(length(draws_hier)-123):(length(draws_hier)-1)]) #Works for all models
loo1 <- loo(log_lik)
loo_vals1[i]=loo1$estimates[1]
k_good = sum(loo1$diagnostics$pareto_k<0.7); k_ok = sum(loo1$diagnostics$pareto_k>=0.7 & loo1$diagnostics$pareto_k<0.9);
k_bad = sum(loo1$diagnostics$pareto_k>=0.9)
k_vals1[[i]] = c(k_good, k_ok, k_bad); i=i+1
}
file_name = file_names[2]
i=1; loo_vals2 <-list(1,2,3,4); k_vals2<- list(c(1,2,3), c(1,2,3), c(1,2,3))
v_list2 = list(c(1,1,   2,    0,10,   100,10,100,   10,0,   100,10,100),
c(4,4,   0.5,    0,2,   20,10,20,   2,0,   20,10,20),
c(2,2,   0.25,    2,5,   100,10,100,   5,2,   100,30,100),
c(1,1,   0.75,    2,20,   20,10,20,   20,20,   20,10,20)
)
for(v_val in v_list2)
{sm_suicide <- rstan::stan_model(file = file_name)
stan_data <- list(y1 = ukdata$suicides100k, x1=ukdata$wagepercol, N1 = length(ukdata$wagepercol), y2 = usdata$suicides100k, x2=usdata$wagepercol, N2 = length(usdata$wagepercol), y3 = countrydata$suicides100k, x3=countrydata$wagepercol, N3 = length(countrydata$wagepercol), v=v_val)
model_hier <- rstan::sampling(sm_suicide, data = stan_data, seed = 2,control=list(adapt_delta=0.95))
draws_hier <- as.data.frame(model_hier)
log_lik  <- data.matrix(draws_hier[(length(draws_hier)-123):(length(draws_hier)-1)]) #Works for all models
loo1 <- loo(log_lik)
loo_vals2[i]=loo1$estimates[1]
k_good = sum(loo1$diagnostics$pareto_k<0.7); k_ok = sum(loo1$diagnostics$pareto_k>=0.7 & loo1$diagnostics$pareto_k<0.9);
k_bad = sum(loo1$diagnostics$pareto_k>=0.9)
k_vals2[[i]] = c(k_good, k_ok, k_bad); i=i+1
}
file_name = file_names[3]
i=1; loo_vals3 <-list(1,2,3,4); k_vals3<- list(c(1,2,3), c(1,2,3), c(1,2,3))
v_list3 = list(c(1,1,  10,0,   100,10,100),
c(4,4,   50,2,   50,20,10),
c(0.5,0.5,   5,2,   50,10,50),
c(2,2,   10,0,   100,5,100)
)
for(v_val in v_list3)
{sm_suicide <- rstan::stan_model(file = file_name)
stan_data <- list(y1 = ukdata$suicides100k, x1=ukdata$wagepercol, N1 = length(ukdata$wagepercol), y2 = usdata$suicides100k, x2=usdata$wagepercol, N2 = length(usdata$wagepercol), y3 = countrydata$suicides100k, x3=countrydata$wagepercol, N3 = length(countrydata$wagepercol), v=v_val)
model_hier <- rstan::sampling(sm_suicide, data = stan_data, seed = 2,control=list(adapt_delta=0.95))
draws_hier <- as.data.frame(model_hier)
log_lik  <- data.matrix(draws_hier[(length(draws_hier)-123):(length(draws_hier)-1)]) #Works for all models
loo1 <- loo(log_lik)
loo_vals3[i]=loo1$estimates[1]
k_good = sum(loo1$diagnostics$pareto_k<0.7); k_ok = sum(loo1$diagnostics$pareto_k>=0.7 & loo1$diagnostics$pareto_k<0.9);
k_bad = sum(loo1$diagnostics$pareto_k>=0.9)
k_vals3[[i]] = c(k_good, k_ok, k_bad); i=i+1
}
file_name = file_names[4]
i=1; loo_vals4 <-list(1,2,3,4); k_vals4 <-list(c(1,2,3), c(1,2,3), c(1,2,3))
v_list4 = list(c(1,1,  10,0,   100,10,100),
c(4,4,   50,2,   50,20,10),
c(0.5,0.5,   5,2,   50,10,50),
c(2,2,   10,0,   100,5,100)  )
for(v_val in v_list4)
{sm_suicide <- rstan::stan_model(file = file_name)
stan_data <- list(y = c(ukdata$suicides100k, usdata$suicides100k, countrydata$suicides100k), x=c(ukdata$wagepercol, usdata$wagepercol, countrydata$wagepercol), N = 124, v=v_val)
model_hier <- rstan::sampling(sm_suicide, data = stan_data, seed = 2,control=list(adapt_delta=0.95))
draws_hier <- as.data.frame(model_hier)
log_lik  <- data.matrix(draws_hier[(length(draws_hier)-123):(length(draws_hier)-1)]) #Works for all models
loo1 <- loo(log_lik)
loo_vals4[i]=loo1$estimates[1]
k_good = sum(loo1$diagnostics$pareto_k<0.7); k_ok = sum(loo1$diagnostics$pareto_k>=0.7 & loo1$diagnostics$pareto_k<0.9);
k_bad = sum(loo1$diagnostics$pareto_k>=0.9)
k_vals4[[i]] = c(k_good, k_ok, k_bad); i=i+1
}
file_name = file_names[4]
i=1; loo_vals4 <-list(1,2,3,4); k_vals4 <-list(c(1,2,3), c(1,2,3), c(1,2,3))
v_list4 = list(c(1,1,  10,0,   100,10,100),
c(4,4,   50,2,   50,20,10),
c(0.5,0.5,   5,2,   50,10,50),
c(2,2,   10,0,   100,5,100)  )
for(v_val in v_list4)
{sm_suicide <- rstan::stan_model(file = file_name)
stan_data <- list(y = c(ukdata$suicides100k, usdata$suicides100k, countrydata$suicides100k), x=c(ukdata$wagepercol, usdata$wagepercol, countrydata$wagepercol), N = 124, v=v_val)
model_hier <- rstan::sampling(sm_suicide, data = stan_data, seed = 2,control=list(adapt_delta=0.95))
draws_hier <- as.data.frame(model_hier)
log_lik  <- data.matrix(draws_hier[(length(draws_hier)-123):(length(draws_hier)-1)]) #Works for all models
loo1 <- loo(log_lik)
loo_vals4[i]=loo1$estimates[1]
k_good = sum(loo1$diagnostics$pareto_k<0.7); k_ok = sum(loo1$diagnostics$pareto_k>=0.7 & loo1$diagnostics$pareto_k<0.9);
k_bad = sum(loo1$diagnostics$pareto_k>=0.9)
k_vals4[[i]] = c(k_good, k_ok, k_bad); i=i+1
}
k_vals4
loo_vals4
model_hier
draws_hier
model_hier
View(draws_hier)
View(draws_hier)
View(model_hier)
file_names = c("Model_1.stan", "Model_2.stan", "Model_3.stan")
file_name = file_names[3]
file_name
sm_suicide <- rstan::stan_model(file = file_name)
stan_data <- list(y1 = ukdata$suicides100k, x1=ukdata$wagepercol, N1 = length(ukdata$wagepercol), y2 = usdata$suicides100k, x2=usdata$wagepercol, N2 = length(usdata$wagepercol), y3 = countrydata$suicides100k, x3=countrydata$wagepercol, N3 = length(countrydata$wagepercol))
model_hier <- rstan::sampling(sm_suicide, data = stan_data, seed = 2,control=list(adapt_delta=0.95))
draws_hier <- as.data.frame(model_hier)
log_lik  <- data.matrix(draws_hier[(length(draws_hier)-123):(length(draws_hier)-1)]) #Works for all models
loo1 <- loo(log_lik)
print(loo1$estimates[1])
loo_vals[i]=loo1;
k_vals[i] = max(loo1$diagnostics$pareto_k);
i=i+1;
View(draws_hier)
save.image("/m/home/home7/75/ranjitm1/data/Downloads/bda/suicide_v_income/r_data.RData")
model_hier
list_of_draws <- extract(model_hier)
list_of_draws
View(list_of_draws)
mu1 = list_of_draws$mu1;
mu2 = list_of_draws$mu2;
mu3 = list_of_draws$mu3;
quantile(mu1, c(0.025, 0.975))
mean(mu1)
?mean
c(1:9)
?array
?matrix
mu1v = matrix(1:27,nrow=3)
for (i in c(1:9)){
mu1v[i,1] = mean(mu1[,i]);
mu1v[i,1:2] = quantile(mu1[,i], c(0.025, 0.975));
}
mu1v = matrix(1:27,ncol=3)
for (i in c(1:9)){
mu1v[i,1] = mean(mu1[,i]);
mu1v[i,1:2] = quantile(mu1[,i], c(0.025, 0.975));
}
mu1v
mu1v = matrix(1:27,ncol=3)
for (i in c(1:9)){
mu1v[i,1] = mean(mu1[,i]);
mu1v[i,2:3] = quantile(mu1[,i], c(0.025, 0.975));
}
mu1v
93*3
mu1v = matrix(1:27,ncol=3)
for (i in c(1:9)){
mu1v[i,1] = mean(mu1[,i]);
mu1v[i,2:3] = quantile(mu1[,i], c(0.025, 0.975));
}
mu2v = matrix(1:66,ncol=3)
for (i in c(1:22)){
mu2v[i,1] = mean(mu2[,i]);
mu2v[i,2:3] = quantile(mu2[,i], c(0.025, 0.975));
}
mu3v = matrix(1:279,ncol=3)
for (i in c(1:93)){
mu3v[i,1] = mean(mu3[,i]);
mu3v[i,2:3] = quantile(mu3[,i], c(0.025, 0.975));
}
mu3v
plot(ukdata$wagepercol, ukdata$suicides100k)
lines(ukdata$wagepercol, mu1v[,1])
?lines
plot(ukdata$wagepercol, ukdata$suicides100k)
lines(ukdata$wagepercol, mu1v[,1])
lines(ukdata$wagepercol, mu1v[,2], col='blue')
lines(ukdata$wagepercol, mu1v[,3], col='blue')
mu1v[3]
mu1v[,3]
plot(ukdata$wagepercol, ukdata$suicides100k, ylim=c(0,22))
lines(ukdata$wagepercol, mu1v[,1])
lines(ukdata$wagepercol, mu1v[,2], col='blue')
lines(ukdata$wagepercol, mu1v[,3], col='blue')
plot(usdata$wagepercol, usdata$suicides100k)
lines(usdata$wagepercol, mu2v[,1])
lines(usdata$wagepercol, mu2v[,2], col='blue')
lines(usdata$wagepercol, mu2v[,3], col='blue')
plot(countrydata$wagepercol, countrydata$suicides100k, ylim=c(0,22))
lines(countrydata$wagepercol, mu3v[,1])
lines(countrydata$wagepercol, mu3v[,2], col='blue')
lines(countrydata$wagepercol, mu3v[,3], col='blue')
?lines
plot(countrydata$wagepercol, countrydata$suicides100k, ylim=c(0,22))
lines(countrydata$wagepercol, mu3v[,1])
lines(countrydata$wagepercol, mu3v[,2], col='blue')
abline(countrydata$wagepercol, mu3v[,3], col='blue')
mu3v = matrix(1:279,ncol=3)
for (i in c(1:93)){
mu3v[i,1] = mean(mu3[,i]);
mu3v[i,2:3] = quantile(mu3[,i], c(0.025, 0.975));
}
plot(countrydata$wagepercol, countrydata$suicides100k, ylim=c(0,22))
abline(countrydata$wagepercol, mu3v[,1])
abline(countrydata$wagepercol, mu3v[,2], col='blue')
abline(countrydata$wagepercol, mu3v[,3], col='blue')
plot(countrydata$wagepercol, countrydata$suicides100k, ylim=c(0,22))
points(countrydata$wagepercol, mu3v[,1])
points(countrydata$wagepercol, mu3v[,2], col='blue')
abline(countrydata$wagepercol, mu3v[,3], col='blue')
plot(usdata$wagepercol, usdata$suicides100k)
points(usdata$wagepercol, mu2v[,1])
points(usdata$wagepercol, mu2v[,2], col='blue')
points(usdata$wagepercol, mu2v[,3], col='blue')
plot(ukdata$wagepercol, ukdata$suicides100k, ylim=c(0,22))
points(ukdata$wagepercol, mu1v[,1])
points(ukdata$wagepercol, mu1v[,2], col='blue')
points(ukdata$wagepercol, mu1v[,3], col='blue')
plot(ukdata$wagepercol, ukdata$suicides100k, ylim=c(0,22))
lines(ukdata$wagepercol, mu1v[,1])
lines(ukdata$wagepercol, mu1v[,2], col='blue')
lines(ukdata$wagepercol, mu1v[,3], col='blue')
plot(countrydata$wagepercol, countrydata$suicides100k, ylim=c(0,22))
lines(countrydata$wagepercol, mu3v[,1])
lines(countrydata$wagepercol, mu3v[,2], col='blue')
abline(countrydata$wagepercol, mu3v[,3], col='blue')
plot(countrydata$wagepercol, countrydata$suicides100k, ylim=c(0,22))
lines(countrydata$wagepercol, mu3v[,1])
lines(countrydata$wagepercol, mu3v[,2], col='blue')
lines(countrydata$wagepercol, mu3v[,3], col='blue')
?plot
sampler_params <- get_sampler_params(model_hier, inc_warmup = FALSE)
View(sampler_params)
sampler_params[-1]
i
if(i=1) draws_hier1=draws_hier
if(i==1) draws_hier1=draws_hier
draws_hier4=draws_hier
sampler_params = sampler_params[[-1]]]]
sampler_params = sampler_params[[-1]]
sampler_params = sampler_params[-1]
View(sampler_params)
sampler_params = sampler_params[-1]
sampler_params = sampler_params[[-1]]
View(sampler_params)
sampler_params <- get_sampler_params(model_hier, inc_warmup = FALSE)
View(sampler_params)
sampler_params = sampler_params[[1]]
View(sampler_params)
mean(sampler_params$3)
mean(sampler_params[,3]
)
max(sampler_params[,3])
sampler_params <- get_sampler_params(model_hier, inc_warmup = FALSE)
max(sampler_params[1][,3])
max(sampler_params[1,,3])
max(sampler_params[[1]][,3])
max(sampler_params[[]][,3])
mean_tree_depth = mean(c( sampler_params[[1]][,3],  sampler_params[[2]][,3],  sampler_params[[3]][,3] ))
mean_tree_depth
mean_accept_stat_by_chain <- sapply(sampler_params, function(x) mean(x[, "tree_depth__"]))
sampler_params = sampler_params[[1]]
mean_accept_stat_by_chain <- sapply(sampler_params, function(x) mean(x[, "tree_depth__"]))
View(sampler_params)
View(sampler_params)
View(sampler_params)
fit_summary <- summary(model_hier)
View(fit_summary)
a = fit_summary[[1]]
View(a)
View(a)
View(list_of_draws)
View(draws_hier)
View(list_of_draws)
View(list_of_draws)
View(list_of_draws)
ukdata =read.csv('UKdata.csv');
plot(ukdata$wagepercol, ukdata$suicides100k, xlab='Standardized monthly income', ylab = 'Suicides per 100,000 people', main = 'UK: Suicide Rate vs Monthly Income for different professions')
usdata =read.csv('USdata.csv');
plot(usdata$wagepercol, usdata$suicides100k, xlab='Standardized monthly income', ylab = 'Suicides per 100,000 people', main = 'US: Suicide Rate vs Monthly Income for different professions')
countrydata =read.csv('countrydata.csv');
plot(countrydata$wagepercol, countrydata$suicides100k, xlab='Standardized monthly income', ylab = 'Suicides per 100,000 people', main = 'Global: Suicide Rate vs Monthly Income for different countries')
library(loo)
library(rstan)
library(shinystan)
SEED <- 2 # set random seed for reproducability
file_name1 = "Model_1.stan"
writeLines(readLines(file_name1))
file_name2 = "Model_2.stan"
writeLines(readLines(file_name2))
file_name3 = "Model_3.stan"
writeLines(readLines(file_name3))
file_name4 = "Model_4.stan"
writeLines(readLines(file_name4))
file_names = c("Model_1.stan", "Model_2.stan", "Model_3.stan")
i=1;
for(file_name in file_names)
{sm_suicide <- rstan::stan_model(file = file_name)
stan_data <- list(y1 = ukdata$suicides100k, x1=ukdata$wagepercol, N1 = length(ukdata$wagepercol), y2 = usdata$suicides100k, x2=usdata$wagepercol, N2 = length(usdata$wagepercol), y3 = countrydata$suicides100k, x3=countrydata$wagepercol, N3 = length(countrydata$wagepercol))
model_hier <- rstan::sampling(sm_suicide, data = stan_data, seed = 2,control=list(adapt_delta=0.95))
draws_hier <- as.data.frame(model_hier)
if(i==1) draws_hier1=draws_hier
if(i==2) draws_hier2=draws_hier
if(i==3) draws_hier3=draws_hier
log_lik  <- data.matrix(draws_hier[(length(draws_hier)-123):(length(draws_hier)-1)]) #Works for all models
loo1 <- loo(log_lik)
loo_vals[i]=loo1$estimates[1];
k_vals[[i]] = max(loo1$diagnostics$pareto_k);
print(max(loo1$diagnostics$pareto_k)); print(loo1$estimates[1]);
i=i+1;
}
###################4k_vals
model_hier3 = model_hier;
file_name = "Model_4.stan"
sm_suicide <- rstan::stan_model(file = file_name)
stan_data <- list(y = c(ukdata$suicides100k, usdata$suicides100k, countrydata$suicides100k), x=c(ukdata$wagepercol, usdata$wagepercol, countrydata$wagepercol), N = 124)
model_hier <- rstan::sampling(sm_suicide, data = stan_data, seed = 2,control=list(adapt_delta=0.95))
draws_hier <- as.data.frame(model_hier)
log_lik  <- data.matrix(draws_hier[(length(draws_hier)-123):(length(draws_hier)-1)]) #Works for all models
loo1 <- loo(log_lik)
print(loo1$estimates[1])
loo_vals[i]=loo1$estimates[1];
k_vals[[i]] = max(loo1$diagnostics$pareto_k)
print(max(loo1$diagnostics$pareto_k)); print(loo1$estimates[1])
draws_hier4=draws_hier
list_of_draws <- extract(model_hier3)
mu1 = list_of_draws$mu1;
mu2 = list_of_draws$mu2;
mu3 = list_of_draws$mu3
mu1v = matrix(1:27,ncol=3)
for (i in c(1:9)){
mu1v[i,1] = mean(mu1[,i]);
mu1v[i,2:3] = quantile(mu1[,i], c(0.025, 0.975));
}
plot(ukdata$wagepercol, ukdata$suicides100k, ylim=c(0,22), main='UK suicide rate', xlab='Standardized income', ylab='Suicides per 100k people');
lines(ukdata$wagepercol, mu1v[,1])
lines(ukdata$wagepercol, mu1v[,2], col='blue')
lines(ukdata$wagepercol, mu1v[,3], col='blue')
mu2v = matrix(1:66,ncol=3)
for (i in c(1:22)){
mu2v[i,1] = mean(mu2[,i]);
mu2v[i,2:3] = quantile(mu2[,i], c(0.025, 0.975));
}
plot(usdata$wagepercol, usdata$suicides100k, main='US suicide rate', xlab='Standardized income', ylab='Suicides per 100k people')
lines(usdata$wagepercol, mu2v[,1])
lines(usdata$wagepercol, mu2v[,2], col='blue')
lines(usdata$wagepercol, mu2v[,3], col='blue')
mu3v = matrix(1:279,ncol=3)
for (i in c(1:93)){
mu3v[i,1] = mean(mu3[,i]);
mu3v[i,2:3] = quantile(mu3[,i], c(0.025, 0.975));
}
plot(countrydata$wagepercol, countrydata$suicides100k, main='Suicide rate', xlab='Standardized income', ylab='Suicides per 100k people')
lines(countrydata$wagepercol, mu3v[,1])
lines(countrydata$wagepercol, mu3v[,2], col='blue')
lines(countrydata$wagepercol, mu3v[,3], col='blue')
quantilelist_of_draws$t1[,2]
sampler_params <- get_sampler_params(model_hier3, inc_warmup = FALSE)
min_tree_depth = min(c( sampler_params[[1]][,3],  sampler_params[[2]][,3],  sampler_params[[3]][,3],  sampler_params[[4]][,3]  ))
max_tree_depth = max(c( sampler_params[[1]][,3],  sampler_params[[2]][,3],  sampler_params[[3]][,3] ,  sampler_params[[4]][,3] ))
mean_tree_depth = mean(c( sampler_params[[1]][,3],  sampler_params[[2]][,3],  sampler_params[[3]][,3] ,  sampler_params[[4]][,3] ))
print(c(min_tree_depth, mean_tree_depth, max_tree_depth))
min_div = min(c( sampler_params[[1]][,5],  sampler_params[[2]][,5],  sampler_params[[3]][,5],  sampler_params[[4]][,5]  ))
max_div = max(c( sampler_params[[1]][,5],  sampler_params[[2]][,5],  sampler_params[[3]][,5],  sampler_params[[4]][,5]  ))
mean_div = mean(c( sampler_params[[1]][,5],  sampler_params[[2]][,5],  sampler_params[[3]][,5] ,  sampler_params[[4]][,5] ))
print(c(min_div, mean_div, max_div))
fit_summary <- summary(model_hier3)
mean_Rhat <- mean(fit_summary[[1]][,10])
max_Rhat <- max(fit_summary[[1]][,10])
print(c('Mean Rhat', mean_Rhat, 'Max Rhat', max_Rhat))
mean_neff <- mean(fit_summary[[1]][,9])
min_neff <- min(fit_summary[[1]][,9])
print(c('Mean N_eff', mean_neff, 'Min N_eff', min_neff))
